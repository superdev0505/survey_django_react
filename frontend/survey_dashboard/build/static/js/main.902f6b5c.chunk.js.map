{"version":3,"sources":["components/Header.jsx","components/Layout.jsx","Utils.jsx","pages/questions/QuestionsList.jsx","API.jsx","reducers/configureStore.jsx","components/TagField.jsx","pages/questions/QuestionItem.jsx","actions/user.jsx","actions/types.jsx","actions/userlist.jsx","actions/metrics.jsx","actions/questions.jsx","actions/feedback.jsx","pages/questions/Questions.jsx","components/PagingBar.jsx","components/PagingTable.jsx","components/Dialog.jsx","pages/users/FingerprintList.jsx","pages/users/index.jsx","pages/metrics/index.jsx","pages/metrics/MetricsDate.jsx","pages/feedback/index.jsx","pages/metrics/MetricsChart.jsx","pages/reports/index.jsx","pages/login/index.jsx","pages/users/SurveyList.jsx","pages/users/SurveyAnswerList.jsx","App.jsx","reducers/user.jsx","reducers/metrics.jsx","reducers/userlist.jsx","reducers/feedback.jsx","reducers/questions.jsx","reducers/Index.jsx","index.js"],"names":["Header","_this","this","user","props","console","log","is_anonymous","react_default","a","createElement","Nav","activeKey","className","onSelect","selectedKey","history","push","is_superuser","Item","Link","href","username","React","Component","connect","state","withRouter","Layout","components_Header","children","Utils","n","string","length","substr","date","Date","getFullYear","getMonth","slice","getDate","getHours","getMinutes","dateString","String","replace","day","month","stringDateA","stringDateB","getTime","e","b","toUpperCase","window","scrollY","setTimeout","scrollTo","scrollToTop","ip","RegExp","IP_REGEX","test","check","navigator","userAgent","vendor","opera","value","str","args","match","number","score","COLOR_GRADIENT","parseInt","valueType","isNaN","Math","floor","parseFloat","Boolean","Array","from","JSON","parse","stringify","debounce","func","delay","inDebounce","context","arguments","clearTimeout","apply","throttled","fn","timeout","task","lastTaskTime","queue","next","shift","downloadCSV","data","filename","pom","document","blob","Blob","join","type","URL","createObjectURL","setAttribute","click","QuestionsList","filter","onSearchClick","keyCode","loadQuestions","_this2","_this$props","onItemClick","questionsLoading","questionOffset","questionCount","InputGroup_default","Form_default","Control","placeholder","onKeyDown","onChange","setState","target","Append","Button_default","variant","onClick","onAddQuestion","role","ListGroup_default","defaultActiveKey","map","item","key","id","action","trunc","text","choice_set","c","Badge_default","enabled","Pagination_default","Prev","Next","DEFAULT_HEADERS","Content-Type","API","request","requestBody","rawResponse","requestUrl","url","params","credentials","method","headers","Object","assign","X-CSRFToken","Cookies","get","getUrlWithParams","fetch","then","response","status","location","Error","json","catch","error","keys","reduce","k","encodeURIComponent","THROTTLE_TIMEOUT","fetchThrottled","TAGS","TAGS_ADD","QUESTIONS","QUESTIONS_SAVE","QUESTIONS_DELETE","ANSWER_TYPES","USER_PROFILE","USER_LOGIN","USER_LIST","USER_LIST_BLOCK_USER","USER_SURVEY_LIST","USER_SURVEY_ANSWER_LIST","PROVIDERS","METRICS","METRICS_DATE","METRICS_CHART","USER_BLOCKS","USER_FEEDBACK","USER_FEEDBACK_AGGREGATED","REPORT_COUNTRIES","REPORT_COUNTRY_AMOUNTS","preloadedState","TagField","options","defaultSelected","onTagChange","tags","newTag","find","tag","customOption","lib","labelKey","multiple","allowNew","onSearch","search","isLoading","results","QuestionItem","allTags","answerType","choiceSet","showAlert","errorText","onAddAnswer","concat","isNew","random","toFixed","onSaveQuestion","_this$state","preventDefault","answer_type","onDeleteQuestion","onFieldUpdate","name","defineProperty","checked","onChoiceTagChange","choice","onChoiceTextChange","propsToState","prevProps","_this$state2","answerTypes","Group","controlId","rows","TagField_TagField","Label","as","Check","label","defaultValue","Alert_default","userResults","userListLoading","userList","userListResults","metricsLoading","metricsResults","metrics","questionListResults","questionList","userFeedbackResults","feedbackList","userFeedbackAggregatedResults","feedbackAggregatedList","Questions","activeItem","loadAnswerTypes","questionSelectEdit","questionActiveItem","QuestionsList_QuestionsList","QuestionItem_QuestionItem","questions","dispatch","query","prev","getState","_getState$questions","questionNext","questionPrevious","offset","questionListRequest","question","PagingBar","skip","size","total","onPrevClick","onNextClick","to","PagingTable","sortField","sortDesc","column","field","onRowClick","onCellClick","onHeaderClick","rowColumnStyle","config","tableClassName","serverPaging","sort","Number","f","hidden","Table_default","selectable","i","style","width","cursor","d","j","PagingBar_PagingBar","Dialog","open","title","handleClose","handleSubmit","scrollable","dialogClassName","Modal_default","show","onHide","closeButton","Title","Body","Footer","FingerprintList","PagingTable_PagingTable","fingerprint","toolbarText","formatDateTmills","screenResolution","availableScreenResolution","fonts","touchSupport","webglVendorAndRenderer","sessionStorage","localStorage","indexedDb","addBehavior","openDatabase","adBlock","hasLiedLanguages","hasLiedResolution","hasLiedOs","hasLiedBrowser","UserList","filters","activeLast24h","ordering","orderingDesc","dialogOpen","dialogTarget","fingerprintOpen","fingerprintTarget","loadUsers","onFilterClick","fieldOrdering","doBlockUser","getStatus","current_survey","questionanswer_set","created","count","dataLoading","ref_id","first_name","last_name","Spinner_default","animation","r","onRowsCountChange","provider","provider_user_id","date_joined","OverlayTrigger_default","trigger","placement","overlay","Popover_default","ip_history","flags","user_flags","v","user_ban_history","reason","suspend_till","is_suspended","is_active","Dialog_Dialog","_getState$userList","userListNext","userListPrevious","userListOffset","userListRequest","Metrics","providers","componentDidMount","loadProviders","loadMetrics","moment","format","handleProviderChange","handleDateChange","noValidate","Row","react_datepicker_es","selected","placeholderText","provider_name","round","success","all","metricsRequest","MetricsDate","loadSystemMetrics","loadBlocks","FeedbackList","loadFeedbacks","loadAggregatedFeedbacks","dataAggregated","loadData","Reports","countries","date_from","date_to","s_date_from","s_date_to","onSpecificCountriesDownloadClick","onCountryReportDownloadClick","loading","_this$state3","aria-hidden","Login","login","password","onFieldChange","htmlFor","aria-describedby","loginUser","userLoginRequest","SurveyList","user_id","Breadcrumb_default","active","reverse","formatDateT","solved","current_question","SurveyAnswerList","getChoiceField","t","survey_id","_this3","App","pathname","loadUser","BrowserRouter","Route","exact","path","render","pages_login","component","initialSource","previous","AppReducers","combineReducers","undefined","objectSpread","userListCount","loggerMiddleware","createLogger","ReactDOM","Provider","store","createStore","applyMiddleware","thunkMiddleware","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.902f6b5c.chunk.js","sourcesContent":["import React from \"react\";\nimport {Nav} from \"react-bootstrap\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {withRouter} from \"react-router-dom\";\n\n\nclass Header extends React.Component {\n\n    render () {\n        let {user} = this.props;\n\n        console.log('[USER]', user);\n        if (user.is_anonymous) {\n            return false\n        }\n\n        return <Nav\n            activeKey=\"/admin/home\"\n            className=\"p-3 navbar-expand-lg bg-primary navbar-dark\"\n            onSelect={selectedKey => this.props.history.push(selectedKey)}>\n\n            {user.is_superuser && <Nav.Item>\n                <Nav.Link href=\"/users\">Users</Nav.Link>\n            </Nav.Item>}\n            {user.is_superuser && <Nav.Item>\n                <Nav.Link href=\"/metrics\">Providers</Nav.Link>\n            </Nav.Item>}\n            {user.is_superuser && <Nav.Item>\n                <Nav.Link href=\"/metrics/chart\">System</Nav.Link>\n            </Nav.Item>}\n            {user.is_superuser && <Nav.Item>\n                <Nav.Link href=\"/reports\">Reports</Nav.Link>\n            </Nav.Item>}\n            {user.is_superuser && <Nav.Item>\n                <Nav.Link href=\"/feedback\">Feedbacks</Nav.Link>\n            </Nav.Item>}\n            <Nav.Item>\n                <Nav.Link href=\"/tags\">Questions</Nav.Link>\n            </Nav.Item>\n            <div className=\"flex-grow-1\"/>\n            <Nav.Item>\n                <Nav.Link>{user.username}</Nav.Link>\n            </Nav.Item>\n\n        </Nav>\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n};\n\nexport default connect(mapStateToProps)(withRouter(Header))","import React from \"react\";\nimport Header from \"./Header\";\n\nexport default  (props) =>\n    <div className=\"d-flex flex-column h-100\">\n        <Header/>\n        <div className=\"flex-grow-1\">\n\n            {props.children}\n\n        </div>\n    </div>","\nexport default class Utils {\n\n    static IP_REGEX = '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$';\n\n    /**\n     * @param n {Number}\n     * @param string {String}\n     * @returns {*|string}\n     */\n    static trunc (n, string) {\n        return string && (string.length > n ? string.substr(0, n - 1) + '...' : string);\n    }\n\n    /**\n     * @param date {Date}\n     * @returns {string}\n     */\n    static formatDate(date) {\n        if (!(date instanceof Date)) {\n            date = new Date(date)\n        }\n\n        return date.getFullYear() + '-'\n            + ('0' + (date.getMonth()+1)).slice(-2) + '-'\n            + ('0' + date.getDate()).slice(-2)\n    }\n\n    /**\n     * @param date {Date}\n     * @returns {string}\n     */\n    static formatDateMonthTime(date) {\n        return ('0' + (date.getMonth()+1)).slice(-2) + '-'\n            + ('0' + date.getDate()).slice(-2) + ' '\n            + ('0' + date.getHours()).slice(-2) + ':'\n            + ('0' + date.getMinutes()).slice(-2)\n    }\n\n    /**\n     * @param date {Date}\n     * @returns {string}\n     */\n    static formatDateTime(date) {\n        return date.getFullYear() + '-'\n            + ('0' + (date.getMonth()+1)).slice(-2) + '-'\n            + ('0' + date.getDate()).slice(-2) + 'T'\n            + ('0' + date.getHours()).slice(-2) + ':'\n            + ('0' + date.getMinutes()).slice(-2)\n    }\n\n    /**\n     * Simply replace python server time format (2017-12-02T00:00:00) to HumanReadable (2017-12-02 00:00:00)\n     * @param dateString {String}\n     */\n    static formatDateT(dateString) {\n        return String(dateString).replace('T', ' ').replace('Z','');\n    }\n\n    static formatDateTmills(dateString) {\n        return String(dateString).replace('T', ' ').replace('Z','').replace(/\\..+/, '');\n    }\n\n    static dayOfWeek(day) {\n        return ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'][day]\n    }\n\n    static monthOfYear(month) {\n        return ['January','February','March','April','May','June','July','August','September','October','November','December'][month]\n    }\n\n    /**\n     * @param stringDateA {String}\n     * @param stringDateB {String}\n     * @returns {number}\n     */\n    static sortByDateString(stringDateA, stringDateB) {\n        try {\n            return new Date(stringDateA).getTime() - new Date(stringDateB).getTime();\n        } catch (e) {\n            return -1;\n        }\n    }\n\n    /**\n     * @param a {String}\n     * @param b {String}\n     * @returns {number}\n     */\n    static sortByNumberOrString(a, b) {\n        try {\n            if (typeof a === 'number' && typeof b ==='number') {\n                return a-b;\n            }\n\n            a = String(a).toUpperCase();\n            b = String(b).toUpperCase();\n            if (a < b) {\n                return -1;\n            }\n            if (a > b) {\n                return 1;\n            }\n            return 0;\n        } catch (e) {\n            return -1;\n        }\n    }\n\n    static scrollToTop() {\n        if (window.scrollY!==0) {\n            setTimeout(function() {\n                window.scrollTo(0,window.scrollY-30);\n                Utils.scrollToTop();\n            }, 10);\n        }\n    }\n\n    /**\n     * Check value is IP\n     * @param ip {string}\n     * @returns {*|boolean}\n     */\n    static isIP(ip) {\n        return new RegExp(Utils.IP_REGEX).test(ip);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    static isMobile() {\n        var check = false;\n        (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera);\n        return check;\n    }\n\n    /**\n     * @returns {string}\n     */\n    static htmlDecode(value) {\n        return String(value)\n            .replace(/lt/g, '<')\n            .replace(/gt/g, '>')\n            .replace(/eq/g, '=')\n            .replace(/le/g, '<=')\n            .replace(/ge/g, '>=');\n    }\n\n    static formatString(str, args) {\n        return str.replace(/{(\\d+)}/g, function(match, number) {\n            return typeof args[number] !== 'undefined'\n                ? args[number]\n                : match\n                ;\n        });\n    }\n\n    static getColorByScore(score) {\n        return Utils.COLOR_GRADIENT[parseInt(score)]\n    }\n\n    static debounce = (func, delay) => {\n        let inDebounce;\n        return function() {\n            const context = this;\n            const args = arguments;\n            clearTimeout(inDebounce);\n            inDebounce = setTimeout(() => func.apply(context, args), delay)\n        }\n    };\n\n    /**\n     * @param value\n     * @param valueType\n     * @returns {*}\n     * @throws {SyntaxError} wrong parsed list/dict value\n     */\n    static toPythonType(value, valueType) {\n        switch (valueType) {\n            case 'int':\n                value = parseInt(value);\n                return isNaN(value) ? 0 : Math.floor(value);\n            case 'float':\n                value = parseFloat(value);\n                return isNaN(value) ? 0 : value;\n            case 'bool':\n                return Boolean(value);\n            case 'list':\n                return Array.from(JSON.parse(value));\n            case 'dict':\n                return JSON.parse(value);\n            default:\n                return value\n        }\n    }\n\n    /**\n     * @param value\n     * @param valueType\n     * @returns {*}\n     * @throws {SyntaxError} wrong parsed list/dict value\n     */\n    static fromPythonType(value, valueType) {\n        switch (valueType) {\n            case 'int':\n                return String(value);\n            case 'float':\n                return String(value);\n            case 'bool':\n                return String(value);\n            case 'list':\n                return JSON.stringify(value);\n            case 'dict':\n                return JSON.stringify(value);\n            default:\n                return value\n        }\n    }\n\n    /**\n     * Pure throttle implementation\n     **/\n    static throttled = (fn, timeout) => {\n        let task, queue = [];\n        let lastTaskTime;\n\n        return function() {\n            let args = arguments;\n            queue.push(fn);\n\n            function next() {\n                if (lastTaskTime && ((new Date().getTime() - lastTaskTime) < timeout)) {\n                    setTimeout(() => next(), timeout)\n                } else {\n                    lastTaskTime = new Date().getTime();\n                    task = queue[0];\n                    queue.shift();\n                    return task.apply(this, args);\n                }\n            }\n            return next();\n        }\n    };\n\n    /**\n     * Downloads CSV file for provided array\n     * @param data\n     * @param filename\n     */\n    static downloadCSV = (data, filename) => {\n        let pom = document.createElement('a');\n        let blob = new Blob([data.join('\\n')],{type: 'text/csv;charset=utf-8;'});\n        pom.href = URL.createObjectURL(blob);\n        pom.setAttribute('download', filename || 'report.csv');\n        pom.click();\n    }\n\n}","import React from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Utils from \"../../Utils\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Badge from \"react-bootstrap/Badge\";\n\n\nexport default class QuestionsList extends React.Component{\n\n    state = {\n        filter: ''\n    };\n\n    onSearchClick = (e) => {\n        if (e.keyCode === 13) {\n            this.props.loadQuestions(this.state.filter);\n        }\n    };\n\n    render() {\n        let {data, onItemClick, loadQuestions, questionsLoading, questionOffset, questionCount} = this.props;\n        let {filter} = this.state;\n\n        return <div className=\"h-100\">\n\n            <InputGroup className=\"mb-3\">\n                <Form.Control\n                    placeholder=\"filter...\"\n                    onKeyDown={this.onSearchClick}\n                    onChange={(e) => this.setState({filter: e.target.value})}\n                />\n                <InputGroup.Append>\n                    <Button variant=\"success\" onClick={this.props.onAddQuestion}>+</Button>\n                </InputGroup.Append>\n            </InputGroup>\n\n            {questionsLoading\n                ? <div className=\"p-5 d-flex align-items-center justify-content-center\">\n                    <div className=\"spinner-border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                  </div>\n                : <ListGroup defaultActiveKey=\"#link1\">\n                        {\n                            data.map(item => {\n                                return <ListGroup.Item key={item.id} action onClick={() => onItemClick(item)}>\n                                    <div className=\"d-flex\">\n                                        <div className=\"flex-grow-1\">\n                                        {Utils.trunc(50, item.text)}\n                                        </div>\n                                        <div>\n                                            {(!item.text || !!item.choice_set.filter(c=>!c.text).length) && <Badge variant=\"danger\">Wrong</Badge>}\n                                            {(!item.enabled) && <Badge variant=\"secondary\">Disabled</Badge>}\n                                        </div>\n                                    </div>\n                                </ListGroup.Item>\n                            })\n                        }\n                    </ListGroup>\n            }\n\n            <Pagination>\n                <Pagination.Prev onClick={() => loadQuestions(false, false, true)} />\n                <Pagination.Item>from {questionOffset} to {questionOffset + 100} of {questionCount}</Pagination.Item>\n                <Pagination.Next onClick={() => loadQuestions(false, true)} />\n            </Pagination>\n        </div>\n    }\n}\n","import Cookies from 'js-cookie';\nimport Utils from './Utils'\nimport {withRouter} from \"react-router-dom\";\n\n\nconst DEFAULT_HEADERS = {\n    \"Content-Type\": 'application/json'\n};\n\nclass API {\n\n    static THROTTLE_TIMEOUT = 300;\n\n    /**\n     * Send fetch\n     * @param request\n     * @param requestBody\n     * @param {Boolean} rawResponse do not automatically convert response data to JSON\n     * @param {String} requestUrl Custom request URL (in case of server sends pagination url by itself)\n     * @returns {*|Promise.<*>}\n     */\n    static fetch(request, requestBody, rawResponse, requestUrl) {\n        let url = requestUrl || request.url;\n        let params = {\n            credentials: 'same-origin',\n            method: request.method || 'get',\n            headers: Object.assign(DEFAULT_HEADERS, {\"X-CSRFToken\": Cookies.get(\"csrftoken\")})\n        };\n\n        if ((params.method === 'post') || (params.method === 'delete')) {\n            params['body'] = JSON.stringify(requestBody)\n        } else if (requestBody) {\n            url = API.getUrlWithParams(requestUrl || request.url, requestBody)\n        }\n\n        return fetch(url, params)\n            .then(response => {\n                switch (response.status) {\n                    case 401:\n                        return window.location = '/login';\n                    // case 403:\n                    //     return window.location = '/login';\n                    case 404:\n                        throw new Error('Not found');\n                    case 500:\n                        throw new Error('Server Error');\n                    default:\n                }\n                return rawResponse ? response.text() : response.json()\n            })\n            .catch(error => console.error(error));\n    }\n\n    /**\n     * Send only after throttled timeout\n     */\n    static fetchThrottled = Utils.throttled(API.fetch, API.THROTTLE_TIMEOUT);\n\n    /**\n     * Builds query string from object\n     * @param url\n     * @param params\n     * @returns {string}\n     */\n    static getUrlWithParams(url, params) {\n        return url + '?' + Object.keys(params)\n            .reduce((a, k) => {\n                a.push(k + '=' + encodeURIComponent(params[k]));\n                return a\n            }, []).join('&');\n    }\n}\n\nAPI.TAGS = {\n    method: 'get',\n    url: '/api/tags'\n};\nAPI.TAGS_ADD = {\n    method: 'post',\n    url: '/api/tags/add'\n};\nAPI.QUESTIONS = {\n    method: 'get',\n    url: '/api/questions'\n};\nAPI.QUESTIONS_SAVE = {\n    method: 'post',\n    url: '/api/questions/save'\n};\nAPI.QUESTIONS_DELETE = {\n    method: 'delete',\n    url: '/api/questions/delete'\n};\nAPI.ANSWER_TYPES = {\n    method: 'get',\n    url: '/api/answer_types'\n};\n\n\nAPI.USER_PROFILE = {\n    method: 'get',\n    url: '/api/user/profile'\n};\nAPI.USER_LOGIN = {\n    method: 'post',\n    url: '/api/user/login'\n};\n\nAPI.USER_LIST = {\n    method: 'get',\n    url: '/api/users/'\n};\nAPI.USER_LIST_BLOCK_USER = {\n    method: 'post',\n    url: '/api/user/block/'\n};\n\nAPI.USER_SURVEY_LIST = {\n    method: 'get',\n    url: '/api/user/survey'\n};\n\nAPI.USER_SURVEY_ANSWER_LIST = {\n    method: 'get',\n    url: '/api/user/survey/answers'\n};\n\n\nAPI.PROVIDERS = {\n    method: 'get',\n    url: '/api/providers'\n};\nAPI.METRICS = {\n    method: 'post',\n    url: '/api/metrics'\n};\nAPI.METRICS_DATE = {\n    method: 'get',\n    url: '/api/metrics/date'\n};\nAPI.METRICS_CHART = {\n    method: 'get',\n    url: '/api/metrics/chart'\n};\n\n\nAPI.USER_BLOCKS = {\n    method: 'get',\n    url: '/api/userblock'\n};\n\n\nAPI.USER_FEEDBACK = {\n    method: 'get',\n    url: '/api/user/feedback_list'\n};\nAPI.USER_FEEDBACK_AGGREGATED = {\n    method: 'get',\n    url: '/api/user/feedback_list_aggregated'\n};\n\nAPI.REPORT_COUNTRIES = {\n    method: 'post',\n    url: '/api/report/countries'\n};\n\nAPI.REPORT_COUNTRY_AMOUNTS = {\n    method: 'get',\n    url: '/api/report/country_amounts'\n};\n\n\nexport default withRouter(API)","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport AppReducers from './Index'\n\nconst loggerMiddleware = createLogger();\n\nexport default function configureStore(preloadedState) {\n    return createStore(\n        AppReducers,\n        preloadedState,\n        applyMiddleware(\n            thunkMiddleware,\n            loggerMiddleware\n        )\n    )\n}","import React from \"react\";\nimport {Typeahead, AsyncTypeahead} from \"react-bootstrap-typeahead\";\nimport API from '../API';\n\nexport default class TagField extends React.Component {\n\n    state = {\n        options: [],\n        defaultSelected: []\n    };\n\n    onTagChange = (tags) => {\n        let {onTagChange} = this.props;\n\n        let newTag = tags.find(tag => tag.customOption);\n\n        if (!newTag) {\n            return onTagChange(tags)\n        }\n\n        API.fetch(API.TAGS_ADD, {\n            text: newTag.text\n        }).then(response => {\n            onTagChange(tags.map(tag => ({\n                text: tag.text,\n                id: (tag.customOption && tag.text === response.text) ? response.id : tag.id\n            })));\n            this.setState({defaultSelected: tags})\n        })\n    };\n\n    render() {\n        let {options} = this.state;\n        let {id, defaultSelected} = this.props;\n\n        return <AsyncTypeahead\n            id={id}\n            defaultSelected={defaultSelected}\n            labelKey=\"text\"\n            multiple\n            allowNew\n\n            className=\"tags-field\"\n            onChange={this.onTagChange}\n            placeholder=\"Add tags...\"\n\n            options={options}\n            onSearch={search => {\n                this.setState({isLoading: true});\n                API.fetch(API.TAGS, { search })\n                    .then(options => this.setState({\n                        isLoading: false,\n                        options: options.results,\n                    }));\n            }}/>\n    }\n}","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport API from \"../../API\";\nimport TagField from \"../../components/TagField\";\nimport Alert from \"react-bootstrap/Alert\";\n\nexport default class QuestionItem extends React.Component {\n\n    state = {\n        id: '',\n        enabled: false,\n        allTags: [],\n        text: '',\n        answerType: '',\n        tags: [],\n        choiceSet: [],\n        showAlert: false,\n        errorText: ''\n    };\n\n    componentDidMount() {\n        this.propsToState(this.props.data)\n    }\n\n    componentDidUpdate(prevProps) {\n        console.log('component did update', prevProps);\n        if (this.props.data.id !== prevProps.data.id) {\n            this.propsToState(this.props.data)\n        }\n    }\n\n    propsToState(data) {\n        let {id, text, tags, answer_type, choice_set, enabled} = data;\n        this.setState({\n            id,\n            text: text || '',\n            tags: tags || [],\n            enabled: enabled || false,\n            choiceSet: choice_set || [],\n            answerType: answer_type || 'vote',\n        })\n    }\n\n    onAddAnswer = () => {\n        let {choiceSet} = this.state;\n        this.setState({\n            choiceSet: choiceSet.concat([{\n                tags: [],\n                text: '',\n                isNew: true,\n                id: 'tempChoice-' + (Math.random() * 10000).toFixed()\n            }])\n        })\n    };\n\n    onSaveQuestion = (e) => {\n        let {id, text, tags, choiceSet, answerType, enabled} = this.state;\n        e.preventDefault();\n        API.fetch(API.QUESTIONS_SAVE, {\n            id, text,\n            tags: tags,\n            choice_set: choiceSet.map(c => c.isNew ? {tags: c.tags, text: c.text} : c),\n            answer_type: answerType,\n            enabled: enabled\n        }).then(data => {\n            if (data.error) {\n                return this.setState({errorText: data.error}, () => {\n                    setTimeout(() => this.setState({errorText: ''}), 5000)\n                })\n            }\n\n            this.setState({showAlert: true}, () => {\n                setTimeout(() => this.setState({showAlert: false}), 2000);\n                this.props.onSaveQuestion()\n            });\n        }).catch(error => {\n            this.setState({errorText: error})\n        })\n    };\n\n    onDeleteQuestion = () => {\n        API.fetch(API.QUESTIONS_DELETE, {\n            id: this.state.id\n        })\n            .then(() => this.props.onDeleteQuestion())\n    };\n\n    onFieldUpdate = (e) => {\n        console.log('[AAAA]', e.target.name, e.target.value);\n        if (e.target.type === 'checkbox') {\n            return this.setState({[e.target.name]: e.target.checked})\n        }\n\n        this.setState({[e.target.name]: e.target.value})\n    };\n\n    onChoiceTagChange = (choice, tags) => {\n        let choiceSet = this.state.choiceSet.map(c => {\n            if (choice.id === c.id) {\n                c.tags = tags;\n                return c\n            }\n            return c\n        });\n\n        this.setState(choiceSet)\n    };\n\n    onChoiceTextChange = (choice, text) => {\n        let choiceSet = this.state.choiceSet.map(c => {\n            if (choice.id === c.id) {\n                c.text = text;\n                return c\n            }\n            return choice\n        });\n\n        this.setState(choiceSet)\n    };\n\n    render() {\n        let {text, tags, answerType, choiceSet, showAlert, id, enabled, errorText} = this.state;\n        let {answerTypes} = this.props;\n\n        return <Form className=\"p-3\">\n            <h4>Question text</h4>\n            <Form.Group controlId=\"questionText\">\n                <Form.Control type=\"text\" rows=\"3\" name=\"text\" value={text} onChange={this.onFieldUpdate}/>\n            </Form.Group>\n\n\n            <div key={\"question-tags-o-\" + id}>\n                <Form.Group key={\"question-tags-\" + id}>\n                    <TagField id={\"question-tags-\" + id}\n                              defaultSelected={tags}\n                              onTagChange={(tags) => this.setState({tags})}/>\n                </Form.Group>\n            </div>\n\n            <Form.Group>\n                <Form.Label>Answer type</Form.Label>\n                <Form.Control as=\"select\" className=\"w-25\" name=\"answerType\" value={answerType}\n                    onChange={this.onFieldUpdate}>\n                    {answerTypes.map(answerType =>\n                        <option value={answerType} key={answerType}>{answerType}</option>\n                    )}\n                </Form.Control>\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Check type=\"checkbox\" controlId=\"questionEnabled\"\n                            label=\"Question Enabled\"\n                            name=\"enabled\" checked={enabled} onChange={this.onFieldUpdate}/>\n            </Form.Group>\n\n            <br/>\n\n            <h4>Answers</h4>\n            <div>\n                {choiceSet && choiceSet.map( choice => {\n                    return <div key={choice.id}>\n                        <Form.Group>\n                            <Form.Control className=\"w-75\" type=\"text\" placeholder=\"Answer\"\n                                          defaultValue={choice.text}\n                                          onChange={(e) => this.onChoiceTextChange(choice, e.target.value)}\n                            />\n                            <TagField id={\"tags-\" + choice.id}\n                                      defaultSelected={choice.tags}\n                                      onTagChange={(tags) => this.onChoiceTagChange(choice, tags)}/>\n                        </Form.Group>\n                    </div>\n                })}\n            </div>\n\n            <div className=\"d-flex justify-content-between w-75 mb-5\">\n                <Button variant=\"primary\" onClick={this.onAddAnswer}>Add Answer</Button>\n                <div>\n                    <Button variant=\"danger\" className=\"mr-3\" onClick={this.onDeleteQuestion}>Delete</Button>\n\n                    <Button variant=\"success\" onClick={this.onSaveQuestion}>Save</Button>\n                </div>\n            </div>\n\n            {showAlert && <Alert variant=\"success\" className=\"w-25 m-2\">\n                <p>\n                    Question was successfully saved!\n                </p>\n            </Alert>}\n\n            {errorText && <Alert variant=\"danger\" className=\"w-25 m-2\">\n                <p>\n                    {errorText}\n                </p>\n            </Alert>}\n        </Form>\n    }\n\n}\n","import {USER_RESULTS} from './types'\nimport fetch from 'isomorphic-fetch'\nimport API from \"../API\";\n\n\nexport const userRequest = () => {\n    return dispatch => {\n        return API.fetch(API.USER_PROFILE).then(json => dispatch(userResults(json)))\n    }\n};\n\nexport const userLoginRequest = (login, password) => {\n    return dispatch => {\n        return API.fetch(API.USER_LOGIN, {login, password})\n            .then(json => window.location = '/tags')\n    }\n};\n\nexport const userResults = (user) => {\n    return {\n        type: USER_RESULTS,\n        user\n    }\n};","export const USER_REQUEST = 'USER_REQUEST';\nexport const USER_RESULTS = 'USER_RESULTS';\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\n\nexport const USER_LIST_RESULTS = 'USERS_RESULTS';\nexport const USER_LIST_LOADING = 'USER_LIST_LOADING';\n\nexport const METRICS = 'METRICS';\nexport const METRICS_LOADING = 'METRICS_LOADING';\n\nexport const USER_FEEDBACK = 'USER_FEEDBACK';\nexport const USER_FEEDBACK_AGGREGATED = 'USER_FEEDBACK_AGGREGATED';\n\nexport const QUESTIONS_LIST_REQUEST = 'QUESTIONS_LIST_REQUEST';\nexport const QUESTIONS_LIST_RESULT = 'QUESTIONS_LIST_RESULT';\nexport const QUESTION_SELECT_EDIT = 'QUESTION_SELECT_EDIT';\n\n\n\n\n\n","import {USER_LIST_RESULTS, USER_LIST_LOADING} from './types'\nimport API from \"../API\";\n\n\nexport const userListRequest = (search, next, prev, filters, ordering) => {\n    return (dispatch, getState) => {\n        dispatch(userListLoading());\n\n        let {userListNext, userListPrevious, userListOffset} = getState().userList;\n        let url = null;\n        let params = null;\n        if (next) {\n            url = userListNext\n        } else if (prev) {\n            url = userListPrevious\n        } else if (search || filters || ordering) {\n            params = Object.assign({search}, filters, {ordering})\n        } else {\n            params = { offset: userListOffset || 0 }\n        }\n\n        return API.fetch(API.USER_LIST, params, false, url)\n            .then(userList => dispatch(userListResults(userList || {})))\n    }\n};\n\nexport const userListLoading = (userList) => {\n    return {\n        type: USER_LIST_LOADING,\n        userList\n    }\n};\n\nexport const userListResults = (userList) => {\n    return {\n        type: USER_LIST_RESULTS,\n        userList\n    }\n};","import {METRICS, METRICS_LOADING} from './types'\nimport API from \"../API\";\n\n\nexport const metricsRequest = (date, provider) => {\n    return dispatch => {\n        dispatch(metricsLoading());\n        return API.fetch(API.METRICS, {date, provider})\n            .then(metrics => dispatch(metricsResults(metrics || {})))\n    }\n};\n\nexport const metricsLoading = () => {\n    return {\n        type: METRICS_LOADING\n    }\n};\n\nexport const metricsResults = (metrics) => {\n    return {\n        type: METRICS,\n        metrics\n    }\n};\n\n","import {QUESTIONS_LIST_REQUEST, QUESTIONS_LIST_RESULT, QUESTION_SELECT_EDIT} from './types'\nimport API from \"../API\";\n\n\nexport const questionSelectEdit = (questionActiveItem) => {\n    return {\n        type: QUESTION_SELECT_EDIT,\n        questionActiveItem\n    }\n};\n\nexport const questionListRequest = (search, next, prev) => {\n    return (dispatch, getState) => {\n        let {questionNext, questionPrevious, questionOffset} = getState().questions;\n        let url = null;\n        let params = null;\n        if (next) {\n            url = questionNext\n        } else if (prev) {\n            url = questionPrevious\n        } else if (search) {\n            params = { search: search }\n        } else {\n            params = { offset: questionOffset }\n        }\n\n        dispatch({type: QUESTIONS_LIST_REQUEST});\n        return API.fetch(API.QUESTIONS, params, false, url)\n            .then(questionList => dispatch(questionListResults(questionList || {})))\n    }\n};\n\nexport const questionListResults = (questionList) => {\n    return {\n        type: QUESTIONS_LIST_RESULT,\n        questionList\n    }\n};","import {USER_FEEDBACK, USER_FEEDBACK_AGGREGATED} from './types'\nimport API from \"../API\";\n\n\nexport const userFeedbackRequest = () => {\n    return dispatch => {\n        return API.fetch(API.USER_FEEDBACK)\n            .then(feedbackList => dispatch(userFeedbackResults(feedbackList || {})))\n    }\n};\n\nexport const userFeedbackResults = (feedbackList) => {\n    return {\n        type: USER_FEEDBACK,\n        feedbackList\n    }\n};\n\n\nexport const userFeedbackAggregatedRequest = () => {\n    return dispatch => {\n        return API.fetch(API.USER_FEEDBACK_AGGREGATED)\n            .then(feedbackList => dispatch(userFeedbackAggregatedResults(feedbackList || [])))\n    }\n};\n\nexport const userFeedbackAggregatedResults = (feedbackAggregatedList) => {\n    return {\n        type: USER_FEEDBACK_AGGREGATED,\n        feedbackAggregatedList\n    }\n};","import React from \"react\";\nimport QuestionsList from \"./QuestionsList\";\nimport API from \"../../API\";\nimport QuestionItem from \"./QuestionItem\";\nimport {questionListRequest, questionSelectEdit} from \"../../actions\";\nimport connect from \"react-redux/es/connect/connect\";\n\nclass Questions extends React.Component {\n\n    state = {\n        data: [],\n        activeItem: null,\n        answerTypes: [],\n    };\n\n    componentDidMount() {\n        this.loadAnswerTypes();\n        this.props.loadQuestions();\n    }\n\n    loadAnswerTypes = () => {\n        API.fetch(API.ANSWER_TYPES)\n            .then(answerTypes => this.setState({answerTypes: answerTypes.map(a => a[0])}))\n    };\n\n    onDeleteQuestion = () => {\n        this.props.loadQuestions();\n        this.props.questionSelectEdit();\n    };\n\n    onAddQuestion = () => this.props.questionSelectEdit({\n        id: null,\n        text: '',\n        tags: [],\n        choice_set: []\n    });\n\n    render() {\n        let {answerTypes} = this.state;\n        let {questionList, questionActiveItem} = this.props;\n        console.log('questionActiveItem', questionActiveItem)\n        return <div className=\"d-flex h-100\">\n            <div className=\"w-25 p-2\">\n                <QuestionsList {...this.props}\n                               data={questionList}\n                               onAddQuestion={this.onAddQuestion}\n                               onItemClick={activeItem => this.props.questionSelectEdit(activeItem)}/>\n            </div>\n            <div className=\"flex-grow-1\">\n                {questionActiveItem && <QuestionItem data={questionActiveItem} id={questionActiveItem.id} answerTypes={answerTypes}\n                                             onDeleteQuestion={this.onDeleteQuestion}\n                                             onSaveQuestion={this.props.loadQuestions}/>}\n            </div>\n        </div>\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    questionList: state.questions.questionList,\n    questionCount: state.questions.questionCount,\n    questionOffset: state.questions.questionOffset,\n    questionsLoading: state.questions.questionsLoading,\n    questionActiveItem: state.questions.questionActiveItem\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadQuestions: (query, prev, next) => dispatch(questionListRequest(query, prev, next)),\n    questionSelectEdit: (question) => dispatch(questionSelectEdit(question)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions)\n","import React from 'react';\nimport Pagination from \"react-bootstrap/Pagination\";\n\n\nexport default class PagingBar extends React.Component {\n\n    render() {\n        const {skip, size, total, onPrevClick, onNextClick} = this.props;\n        let to = skip + size;\n        if (to > total) {\n            to = total;\n        }\n\n        return <Pagination>\n            <Pagination.Prev onClick={() => onPrevClick(skip - size <= 0 ? 0: skip - size)} />\n            {skip} of {total}\n            <Pagination.Next  onClick={() => onNextClick(skip + size > total ? total : size)} />\n        </Pagination>;\n    }\n\n}","import React from 'react';\nimport Table from \"react-bootstrap/Table\";\nimport PagingBar from \"./PagingBar\";\n\n\nexport default class PagingTable extends React.Component {\n\n    state = {\n        sortField: '',\n        sortDesc: ''\n    };\n\n    onHeaderClick(column) {\n        this.setState({\n            sortDesc: !this.state.sortDesc,\n            sortField: column.sortField || column.field\n        })\n    }\n\n    render() {\n        let {data, onRowClick, onCellClick, onHeaderClick, rowColumnStyle, config, tableClassName, serverPaging} = this.props;\n        let {sortField, sortDesc} = this.state;\n\n\n        if (sortField) {\n            data = data.sort((a,b) => {\n                a = a[sortField];\n                b = b[sortField];\n\n                if (Number(a) >= 0) {\n                    a = Number(a);\n                    b = Number(b);\n                }\n                console.log('[SORT]', typeof a, typeof b);\n                return a === b ? 0 : ((a < b) !== sortDesc ? -1 : 1);\n            })\n        }\n\n        config = config.filter(f => !f.hidden);\n\n        return <div className={tableClassName}>\n\n            <Table selectable={true}\n                   onCellClick={onCellClick}>\n\n                <thead>\n                <tr>\n                    {config.map((c, i) =>\n                        <th key={i}\n                            onClick={() => onHeaderClick ? onHeaderClick(c) : this.onHeaderClick(c)}\n                            style={{width: c.width, cursor: 'pointer'}}>\n                                    <span>\n                                        {c.name}\n                                        {c.field !== this.state.sortField ? '' :\n                                            this.state.sortDesc\n                                                ? <i className=\"fa fa-angle-up\"/>\n                                                : <i className=\"fa fa-angle-down\"/>\n                                        }\n                                    </span>\n                        </th>\n                    )}\n                </tr>\n                </thead>\n\n\n                <tbody>\n                {data.map((d, i) =>\n                    <tr key={i} style={{cursor: 'pointer'}}\n                        onClick={(e) => onRowClick && onRowClick(d, e)}>{\n                        config.map((c, j) =>\n                            <td key={j} style={Object.assign({width: c.width}, rowColumnStyle, c.style)}>\n                                {\n                                    typeof c.field === 'function' ? c.field(d, i) : d[c.field]\n                                }\n                            </td>\n                        )\n                    }\n                    </tr>\n                )}\n                </tbody>\n\n            </Table>\n\n            {serverPaging && <PagingBar {...this.props}/>}\n\n        </div>\n    }\n\n}\n\n","import React from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default class Dialog extends React.Component {\n\n    render() {\n        let {open, title, text, handleClose, handleSubmit, scrollable, dialogClassName, style} = this.props;\n\n        return <Modal show={open} onHide={handleClose} scrollable={scrollable} dialogClassName={dialogClassName} style={style}>\n            <Modal.Header closeButton>\n                <Modal.Title>{title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{text}</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    No\n                </Button>\n                <Button variant=\"primary\" onClick={handleSubmit}>\n                    Yes\n                </Button>\n            </Modal.Footer>\n        </Modal>;\n    }\n\n}","import React from \"react\";\nimport PagingTable from \"../../components/PagingTable\";\nimport Utils from \"../../Utils\";\nimport Badge from \"react-bootstrap/Badge\";\nimport API from \"../../API\";\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\n\nexport default (props) =>\n    <div className=\"m-3\">\n\n        <PagingTable\n            data={props.data.fingerprint.map(f => Object.assign({date: f.date}, f.fingerprint))}\n            toolbarText=\"Surveylist\"\n            serverPaging\n            onRowClick={() => {}}\n                config={[\n                    {name: 'date', field: f => Utils.formatDateTmills(f.date)},\n                    {name: 'userAgent', field: 'userAgent'},\n                    {name: 'screenResolution', field: f=> f.screenResolution.join('x')},\n                    {name: 'availableScreenResolution', field: f=> f.availableScreenResolution.join('x')},\n                    {name: 'timezoneOffset', field: 'timezoneOffset'},\n                    {name: 'timezone', field: 'timezone'},\n                    {name: 'language', field: 'language'},\n                    {name: 'colorDepth', field: 'colorDepth'},\n                    {name: 'deviceMemory', field: 'deviceMemory'},\n                    {name: 'fonts', field: f=> f.fonts.join(',')},\n                    {name: 'touchSupport', field: f => String(f.touchSupport)},\n                    {name: 'hardwareConcurrency', field: 'hardwareConcurrency'},\n                    {name: 'webglVendorAndRenderer', field: f => String(f.webglVendorAndRenderer)},\n                    {name: 'sessionStorage', field: f => String(f.sessionStorage)},\n                    {name: 'localStorage', field:  f => String(f.localStorage)},\n                    {name: 'indexedDb', field:  f => String(f.indexedDb)},\n                    {name: 'addBehavior', field:  f => String(f.addBehavior)},\n                    {name: 'openDatabase', field:  f => String(f.openDatabase)},\n                    {name: 'cpuClass', field: 'cpuClass'},\n                    {name: 'platform', field: 'platform'},\n                    {name: 'plugins', field: 'plugins'},\n                    {name: 'audio', field: 'audio'},\n                    {name: 'adBlock', field: f => String(f.adBlock)},\n                    {name: 'hasLiedLanguages', field: f => String(f.hasLiedLanguages)},\n                    {name: 'hasLiedResolution', field: f => String(f.hasLiedResolution)},\n                    {name: 'hasLiedOs', field: f => String(f.hasLiedOs)},\n                    {name: 'hasLiedBrowser', field: f => String(f.hasLiedBrowser)},\n            ]}\n        />\n\n    </div>","import React from \"react\";\nimport {connect} from 'react-redux'\nimport {userListRequest} from \"../../actions\";\nimport PagingTable from \"../../components/PagingTable\";\nimport Utils from \"../../Utils\";\nimport API from \"../../API\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Dialog from \"../../components/Dialog\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport FingerprintList from \"./FingerprintList\";\n\nconst SOCIAL_NETWORKS = {\n    'facebook': 'fa-facebook',\n    'vk-oauth2': 'fa-vk',\n    'google-oauth2': 'fa-google',\n    'twitter': 'fa-twitter',\n    'twitch': 'fa-twitch',\n    'discord': 'fa-discord'\n};\n\nclass UserList extends React.Component {\n\n    state = {\n        filter: '',\n        filters: {\n            'activeLast24h': true,\n        },\n        ordering: '-survey_count',\n        orderingDesc: false,\n        dialogOpen: false,\n        dialogTarget: {},\n        fingerprintOpen: false,\n        fingerprintTarget: {}\n    };\n\n    componentDidMount() {\n        this.loadUsers()\n    }\n\n    loadUsers = () => this.props.loadUsers(this.state.filter, null, null, this.state.filters, this.state.ordering);\n\n    onSearchClick = (e) => {\n        if (e.keyCode === 13) {\n            this.loadUsers()\n        }\n    };\n\n    onFilterClick = (e) => {\n        let {name} = e.target;\n        let filter = this.state.filters[name];\n        this.setState({filters: Object.assign(this.state.filters, {[name]: !filter})}, () => {\n            console.log(this.state);\n            this.loadUsers()\n        })\n    };\n\n    onHeaderClick = (column) => {\n        let ordering = typeof column.field === 'string' ? column.field : (column.fieldOrdering || '');\n        let orderingDesc = !this.state.orderingDesc;\n        this.setState({ ordering: (orderingDesc ? '-' : '') + ordering, orderingDesc}, () => {\n            this.props.loadUsers(this.state.filter, null, null, this.state.filters, this.state.ordering)\n        })\n    };\n\n    doBlockUser = () => {\n        this.setState({dialogOpen: false});\n        API.fetch(API.USER_LIST_BLOCK_USER, this.state.dialogTarget)\n            .then(this.loadUsers)\n    };\n\n    getStatus = f =>\n        <div>\n            <div>\n                currrent survey: {f.current_survey && f.current_survey.questionanswer_set.length || 0} of 10\n            </div>\n            <div>\n                currrent survey created: {f.current_survey && Utils.formatDateTmills(f.current_survey.created)}\n            </div>\n        </div>;\n\n    render() {\n        let {data, count, skip, size, loadUsers, offset, dataLoading} = this.props;\n        let {dialogOpen, dialogTarget, filters, fingerprintOpen, fingerprintTarget} = this.state;\n        let {ref_id, first_name, last_name} = dialogTarget;\n        let style = {};\n\n        console.log('{FINGER!} ', fingerprintTarget);\n\n        return <div className=\"m-3\">\n\n            <InputGroup className=\"mb-3\">\n                <Form.Control\n                    placeholder=\"filter...\"\n                    onKeyDown={this.onSearchClick}\n                    onChange={(e) => this.setState({filter: e.target.value})}\n                />\n            </InputGroup>\n\n            <div className=\"d-flex\">\n\n                <InputGroup className=\"mb-3\">\n                    <Form.Check\n                        name='activeLast24h'\n                        label='Active last 24 hours'\n                        checked={filters.activeLast24h}\n                        onClick={this.onFilterClick}\n                    />\n                </InputGroup>\n\n                <InputGroup className=\"mb-3\">\n                    <Form.Check\n                        name='onlyBots'\n                        label='Only Bots'\n                        onClick={this.onFilterClick}\n                    />\n                </InputGroup>\n\n                <InputGroup className=\"mb-3\">\n                    <Form.Check\n                        name='onlyContradicting'\n                        label='Only Contradicting'\n                        onClick={this.onFilterClick}\n                    />\n                </InputGroup>\n\n                <InputGroup className=\"mb-3\">\n                    <Form.Check\n                        name='blockedUsers'\n                        label='Blocked Users'\n                        onClick={this.onFilterClick}\n                    />\n                </InputGroup>\n            </div>\n\n            {dataLoading ?\n\n                <div className=\"d-flex justify-content-center\">\n                    <Spinner animation=\"border\" role=\"status\" className=\"ml-5 mt-4\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                </div> :\n\n                <PagingTable\n                    data={data}\n                    toolbarText=\"Userlist\"\n                    serverPaging\n                    size={size}\n                    skip={offset}\n                    total={count}\n                    onHeaderClick={this.onHeaderClick}\n                    onRowClick={(r, e) => {\n                        if (e.target.type === 'button') {\n                            return\n                        }\n                        window.open('/users/' + r.id, '__blank')\n                    }}\n                    onPrevClick={(skip) => loadUsers(false, false, true)}\n                    onNextClick={(skip) => loadUsers(false, true)}\n                    onRowsCountChange={(size) => loadUsers(skip, size)}\n                    config={[\n                        {name: 'RefId', field: 'ref_id', style},\n                        {name: 'Provider', fieldOrdering: 'provider__name',\n                            field: (f) => f.provider ? f.provider.name : '', style},\n                        {name: 'SubId', fieldOrdering: 'provider_user_id',\n                            field: (f) => Utils.trunc(8, f.provider_user_id), style},\n                        {name: 'Joined', fieldOrdering: 'date_joined',\n                            field: f => Utils.formatDateTmills(f.date_joined), style},\n\n                        {name: 'IPs', fieldOrdering: 'ip_history', field: f =>\n                            <OverlayTrigger\n                                trigger=\"click\"\n                                placement=\"left\"\n                                overlay={\n                                    <Popover>\n                                        {f.ip_history.map(ip => <div>{Utils.formatDateTmills(ip.date)} - {ip.ip}</div>)}\n                                    </Popover>\n                                }>\n                                <Button variant=\"outline-success\">\n                                    IPs - {f.ip_history.length}\n                                </Button>\n                            </OverlayTrigger>\n                        },\n\n                        {name: 'Fingerprint', fieldOrdering: 'fingerprint__count',\n                            field: f =>\n                                <Button onClick={() => this.setState({fingerprintOpen: true, fingerprintTarget: f})}\n                                        variant={\"outline-success\"}>\n                                    FPs - {f.fingerprint.length}\n                                </Button>\n                        },\n\n                        {name: 'Questions #', fieldOrdering: 'survey__status', field: 'survey_count'},\n                        {name: 'Flags', fieldOrdering: 'user_flags__date',\n                            field: (f) => {\n                                let flags = f.user_flags.reduce((a, v) => {\n                                    a[v.key] = (a[v.key] || 0) + 1;\n                                    return a\n                                }, {});\n                                return Object.keys(flags).map(key => <Button variant=\"primary\">\n                                    {key} <Badge variant=\"light\">{flags[key]}</Badge>\n                                </Button>)\n                            }\n                        },\n                        {name: 'Suspended', fieldOrdering: 'user_ban_history__date',\n                            field: f => f.user_ban_history && !!f.user_ban_history.length && <OverlayTrigger\n                                trigger=\"click\"\n                                placement=\"left\"\n                                overlay={\n                                    <Popover>\n                                        {f.user_ban_history.map(i => <div>{i.reason + ' - ' + Utils.formatDateTmills(i.suspend_till)}</div>)}\n                                    </Popover>\n                                }>\n                                <Button variant={f.is_suspended ? \"danger\" : \"outline-success\"}>\n                                        {f.is_suspended ? 'Suspended' : 'Suspend History'}\n                                </Button>\n                            </OverlayTrigger>\n                        },\n                        {name: 'Block user', fieldOrdering: 'is_active',\n                            field: f =>\n                                <Button onClick={() => this.setState({dialogOpen: true, dialogTarget: f})}\n                                    variant={f.is_active ? \"outline-success\" : \"danger\"}>\n                                    {f.is_active ? 'Block' : 'Unblock'}\n                                </Button>\n                        }\n                    ]}\n                />\n            }\n\n            <Dialog\n                open={dialogOpen}\n                text={`Are you sure want to ${dialogTarget.is_active ? 'BLOCK' : 'UNBLOCK'} user ${ref_id} - ${first_name} ${last_name} ?`}\n                title={`Block User -  ${first_name} ${last_name} - ${ref_id}`}\n                handleClose={() => this.setState({dialogOpen: false})}\n                handleSubmit={this.doBlockUser}\n            />\n\n            <Dialog\n                scrollable\n                dialogClassName=\"modal-90w\"\n                open={fingerprintOpen}\n                title={`Fingerprint History - ${fingerprintTarget.ref_id}`}\n                text={<FingerprintList data={fingerprintTarget}/>}\n                handleClose={() => this.setState({fingerprintOpen: false})}\n                handleSubmit={() => this.setState({fingerprintOpen: false})}\n            />\n        </div>\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    data: state.userList.results,\n    count: state.userList.count,\n    offset: state.userList.offset,\n    dataLoading: state.userList.dataLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadUsers: (query, prev, next, filters, ordering) => dispatch(userListRequest(query, prev, next, filters, ordering))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList)","import React from \"react\";\nimport {connect} from 'react-redux'\nimport {metricsRequest} from \"../../actions\";\nimport PagingTable from \"../../components/PagingTable\";\nimport API from \"../../API\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment/moment'\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass Metrics extends React.Component {\n\n    state = {\n        date: '',\n        provider: '',\n        providers: []\n    };\n\n    componentDidMount = () => {\n        this.loadProviders();\n        this.loadMetrics();\n    };\n\n    loadProviders = () => {\n        API.fetch(API.PROVIDERS)\n            .then(providers => this.setState({providers}))\n    };\n\n    loadMetrics = () => {\n        let {provider, date} = this.state;\n        this.props.loadMetrics(\n            date && moment(date).format('DD/MM/YYYY'),\n            provider\n        )\n    };\n\n    handleProviderChange = (e) => {\n        this.setState({\n            provider: e.target.value\n        }, this.loadMetrics)\n    };\n\n    handleDateChange = (date) => {\n        this.setState({date}, this.loadMetrics)\n    };\n\n    render() {\n        let {metrics, metricsLoading} = this.props;\n        let {date, provider, providers} = this.state;\n\n        return <div className=\"m-3\">\n\n            <Form noValidate>\n                <Form.Row>\n                    <Form.Group className=\"ml-1 mr-5\">\n                        <Form.Label>Date</Form.Label>\n                        <div>\n                            <DatePicker\n                                selected={date}\n                                className=\"form-control\"\n                                placeholderText=\"Click to select a date\" onChange={this.handleDateChange}/>\n                        </div>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"metrics.providerSelect\">\n                        <Form.Label>Provider</Form.Label>\n                        <Form.Control as=\"select\" onChange={this.handleProviderChange}>\n                            <option value=''>All</option>\n                            {providers.map(f => <option key={f.id} value={f.id}>{f.name}</option>)}\n                        </Form.Control>\n                    </Form.Group>\n                    {metricsLoading && <Form.Group>\n                        <Spinner animation=\"border\" role=\"status\" className=\"ml-5 mt-4\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    </Form.Group>}\n                </Form.Row>\n            </Form>\n\n            <div className=\"card border-primary mb-3\">\n                <div className=\"card-header\">Aggregation by day</div>\n                <div className=\"card-body\">\n                    <PagingTable\n                        data={metrics}\n                        config={[\n                            {name: 'Date', field: 'trdate'},\n                            {name: 'Provider', field: f => f.provider_name || 'All', sortField: 'provider_name'},\n                            {name: 'All survey', field: 'all'},\n                            {name: 'Started survey', field: 'started'},\n                            {name: 'Success survey', field: 'success'},\n                            {name: 'Success %', field: f => Math.round(f.success * 100 / f.all) + '%', sortField: 'failed' },\n\n                            {name: 'Contradicting', field: 'is_contradicting'},\n                            {name: 'Bot', field: 'is_bot'},\n                            {name: 'Changin IP', field: 'is_changing_ip'},\n                            {name: 'Zombie', field: 'is_zombie'},\n\n                            {name: 'Revenue', field: 'sum'}\n                        ]}\n                    />\n                </div>\n            </div>\n\n        </div>\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    metrics: state.metrics.metrics || [],\n    metricsLoading: state.metrics.metricsLoading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadMetrics: (date, provider) => dispatch(metricsRequest(date, provider)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Metrics)","import React from \"react\";\nimport PagingTable from \"../../components/PagingTable\";\nimport API from \"../../API\";\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Utils from \"../../Utils\";\n\nconst statuses = [\n    'NEW',\n    'SUCCESS'\n];\n\nexport default class MetricsDate extends React.Component {\n\n    state = {\n        data: [],\n        date: null\n    };\n\n    componentDidMount() {\n        this.loadSystemMetrics()\n    }\n\n    loadSystemMetrics = () => {\n        let {date} = this.props.match.params;\n        API.fetch(API.METRICS_CHART, {date})\n            .then(data => this.setState({\n                data, date\n            }))\n    };\n\n    loadBlocks = () => {\n        let {date} = this.props.match.params;\n        API.fetch(API.METRICS, {date})\n            .then(data => this.setState({\n                data, date\n            }))\n    };\n\n    render() {\n        let {data, date} = this.state;\n\n        return <div className=\"m-3\">\n\n            <PagingTable\n                data={data}\n                toolbarText=\"Metrics list\"\n                onRowClick={(d) => {}}\n                config={[\n                    {name: 'Date', field: f => Utils.formatDateTmills(f.date)},\n                    {name: 'Survey', field: 'survey'},\n                    {name: 'Questions', field: 'questions'},\n                    {name: 'Survey Success', field: 'survey_success'},\n                    {name: 'Survey Unsuccess', field: 'survey_unsuccess'},\n                    {name: 'Transaction', field: 'transaction'},\n                    {name: 'Users_registered', field: 'users_registered'},\n                ]}\n            />\n\n\n\n\n\n        </div>\n    }\n\n}","import React from \"react\";\nimport {connect} from 'react-redux'\nimport {userFeedbackAggregatedRequest, userFeedbackRequest} from \"../../actions\";\nimport PagingTable from \"../../components/PagingTable\";\nimport Utils from \"../../Utils\";\n\nclass FeedbackList extends React.Component {\n\n    componentDidMount() {\n        this.props.loadFeedbacks();\n        this.props.loadAggregatedFeedbacks();\n    }\n\n    render() {\n        let {data, count, dataAggregated, skip, size, loadData} = this.props;\n        let style = {};\n\n        return <div className=\"m-3\">\n\n            <div className=\"card border-primary mb-3\">\n                <div className=\"card-header\">Aggregation by day</div>\n                <div className=\"card-body\">\n                    <PagingTable\n                        data={dataAggregated}\n                        config={[\n                            {name: 'Date', field: 'date'},\n                            {name: 'VPN Blocked', field: 'blocked_vpn'},\n                            {name: 'VPN Feedback', field: 'feedback_vpn'},\n                            {name: 'Adblock Blocked', field: 'blocked_adblock'},\n                            {name: 'Adblock Feedback', field: 'feedback_adblock'},\n                        ]}\n                    />\n                </div>\n            </div>\n\n            <br/>\n\n            <div className=\"card border-primary mb-3\">\n                <div className=\"card-header\">All feedbacks </div>\n                <div className=\"card-body\">\n                    <PagingTable\n                        data={data}\n                        toolbarText=\"Feedback List\"\n                        serverPaging\n                        size={size}\n                        skip={skip}\n                        total={count}\n                        onRowClick={() => {}}\n                        onPrevClick={(skip) => loadData(skip, size)}\n                        onNextClick={(skip) => loadData(skip, size)}\n                        onRowsCountChange={(size) => loadData(skip, size)}\n                        config={[\n                            {name: 'Date', field: 'date', style},\n                            {name: 'Type', field: 'type', style},\n                            {name: 'Text', field: 'text', style},\n                            {name: 'User', field: (f) => <span>{f.user.first_name} - {f.user.last_name}</span>, style},\n                            {name: 'Fingerprint', field: (f) => Utils.trunc(250, f.fingerprint), style},\n                        ]}\n                    />\n                </div>\n            </div>\n        </div>\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    data: state.feedbackList.results || [],\n    count: state.feedbackList.count,\n    dataAggregated: state.feedbackList.feedbackAggregatedList || [],\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loadFeedbacks: () => dispatch(userFeedbackRequest()),\n    loadAggregatedFeedbacks: () => dispatch(userFeedbackAggregatedRequest())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedbackList)","import React from \"react\";\nimport PagingTable from \"../../components/PagingTable\";\nimport API from \"../../API\";\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Utils from \"../../Utils\";\n\nexport default class MetricsChart extends React.Component {\n\n    state = {\n        data: []\n    };\n\n    componentDidMount() {\n        API.fetch(API.METRICS_CHART)\n            .then(data => this.setState({data}))\n    }\n\n    render() {\n        let {data, date} = this.state;\n\n        return <div className=\"m-3\">\n\n            <PagingTable\n                data={data}\n                toolbarText=\"Metrics list\"\n                onRowClick={(d) => {}}\n                config={[\n                    {name: 'Date', field: f => Utils.formatDateTmills('date')},\n                    {name: 'Survey', field: 'survey'},\n                    {name: 'Questions', field: 'questions'},\n                    {name: 'Survey Success', field: 'survey_success'},\n                    {name: 'Survey Unsuccess', field: 'survey_unsuccess'},\n                    {name: 'Transaction', field: 'transaction'},\n                    {name: 'Users_registered', field: 'users_registered'},\n                ]}\n            />\n\n        </div>\n    }\n\n}","import React from \"react\";\nimport API from \"../../API\";\nimport Utils from \"../../Utils\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment/moment'\n\n\nexport default class Reports extends React.Component {\n\n    state = {\n        countries: '',\n        date_from: new Date(),\n        date_to: new Date(),\n        s_date_from: new Date(),\n        s_date_to: new Date(),\n    };\n\n    onSpecificCountriesDownloadClick = () => {\n        let {countries, s_date_from, s_date_to} = this.state;\n        API.fetch(API.REPORT_COUNTRIES, {\n            countries,\n            date_from: moment(s_date_from).format('DD/MM/YYYY'),\n            date_to: moment(s_date_to).format('DD/MM/YYYY'),\n        })\n            .then(Utils.downloadCSV)\n    };\n\n    onCountryReportDownloadClick = () => {\n        let {countries, date_from, date_to} = this.state;\n        date_to = moment(date_to).format('DD/MM/YYYY');\n        date_from = moment(date_from).format('DD/MM/YYYY');\n\n        this.setState({loading: true});\n        API.fetch(API.REPORT_COUNTRY_AMOUNTS, { countries, date_from, date_to})\n            .then((r) => {\n                this.setState({loading: false});\n                Utils.downloadCSV(r, `report_date_countries_${date_from}-${date_to}.csv`)\n            })\n    };\n\n    handleDateChange = (date, type) => {\n        this.setState({[type]: date})\n    };\n\n    render() {\n        let {date_from, date_to, s_date_from, s_date_to, countries, loading} = this.state;\n        let style = {};\n\n        return <div className=\"m-3\">\n\n            <div className=\"card border-primary mb-3\">\n                <div className=\"card-header\">Report by Date - Country - Mobile - Desktop, format CSV</div>\n                <div className=\"card-body\">\n                    <Form noValidate>\n\n                        <Form.Row>\n                            <Form.Group className=\"ml-1 mr-5\">\n                                <Form.Label>Date From</Form.Label>\n                                <div>\n                                    <DatePicker\n                                        selected={date_from}\n                                        className=\"form-control\"\n                                        placeholderText=\"Click to select a date\" onChange={date => this.handleDateChange(date, 'date_from')}/>\n                                </div>\n                            </Form.Group>\n                            <Form.Group className=\"ml-1 mr-5\">\n                                <Form.Label>Date To</Form.Label>\n                                <div>\n                                    <DatePicker\n                                        selected={date_to}\n                                        className=\"form-control\"\n                                        placeholderText=\"Click to select a date\" onChange={date => this.handleDateChange(date, 'date_to')}/>\n                                </div>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <div className=\"d-flex justify-content-between w-75 my-1\">\n                            <Button variant=\"primary\" onClick={this.onCountryReportDownloadClick}>\n                                Download <i className={\"fa \" + (loading ? 'fa-sync fa-spin' : 'fa-download')} aria-hidden=\"true\"/>\n                            </Button>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n\n\n            <div className=\"card border-primary mb-3\">\n                <div className=\"card-header\">Report for specific provided countries, format CSV</div>\n                <div className=\"card-body\">\n                    <Form noValidate>\n\n                        <Form.Row>\n                            <Form.Group className=\"ml-1 mr-5\">\n                                <Form.Label>Date From</Form.Label>\n                                <div>\n                                    <DatePicker\n                                        selected={s_date_from}\n                                        className=\"form-control\"\n                                        placeholderText=\"Click to select a date\" onChange={date => this.handleDateChange(date, 's_date_from')}/>\n                                </div>\n                            </Form.Group>\n                            <Form.Group className=\"ml-1 mr-5\">\n                                <Form.Label>Date To</Form.Label>\n                                <div>\n                                    <DatePicker\n                                        selected={s_date_to}\n                                        className=\"form-control\"\n                                        placeholderText=\"Click to select a date\" onChange={date => this.handleDateChange(date, 's_date_to')}/>\n                                </div>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Row>\n                            <InputGroup className=\"ml-1 my-1\">\n                                <Form.Control\n                                    placeholder=\"Countries\"\n                                    as=\"textarea\" rows=\"3\"\n                                    onChange={(e) => this.setState({countries: e.target.value})}\n                                />\n                            </InputGroup>\n                        </Form.Row>\n\n\n                        <div className=\"d-flex justify-content-between w-75 my-1\">\n                            <Button variant=\"primary\" onClick={this.onSpecificCountriesDownloadClick}>\n                                Download <i className=\"fa fa-download\" aria-hidden=\"true\"/>\n                            </Button>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n\n        </div>\n    }\n\n}\n","import React from \"react\";\nimport { connect } from 'react-redux'\nimport { userLoginRequest } from \"../../actions\";\n\nclass Login extends React.Component {\n\n    state = {\n        login: '',\n        password: ''\n    };\n\n    onFieldChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    };\n\n    render() {\n        let {login, password} = this.state;\n\n        return <div className=\"container mt-5 w-25\">\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Login</label>\n                    <input className=\"form-control\"\n                           onChange={this.onFieldChange}\n                           name=\"login\"\n                           aria-describedby=\"emailHelp\"\n                           placeholder=\"Enter login\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input type=\"password\"\n                           name=\"password\"\n                           onChange={this.onFieldChange}\n                           className=\"form-control\"\n                           placeholder=\"Password\"/>\n                </div>\n\n                <button className=\"btn btn-default\" onClick={() => this.props.loginUser(login, password)}>Login</button>\n            </fieldset>\n        </div>\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    user: state.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n    loginUser: (login, password) => dispatch(userLoginRequest(login, password))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from \"react\";\nimport PagingTable from \"../../components/PagingTable\";\nimport Utils from \"../../Utils\";\nimport API from \"../../API\";\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\nimport Badge from \"react-bootstrap/Badge\";\n\nexport default class SurveyList extends React.Component {\n\n    state = {\n        data: [],\n        user: {},\n        status: {}\n    };\n\n    componentDidMount() {\n        API.fetch(API.USER_SURVEY_LIST, {user_id: this.props.match.params.user_id})\n            .then(r =>\n                this.setState({\n                    data: r.data,\n                    user: r.user,\n                    status: r.status.reduce((a,v) => Object.assign(a, {[v[1]]: v[0]}),{})\n                })\n            )\n    }\n\n    render() {\n        let {data, user, status} = this.state;\n\n        return <div className=\"m-3\">\n\n            <Breadcrumb>\n                <Breadcrumb.Item href=\"/users\">Users</Breadcrumb.Item>\n                <Breadcrumb.Item active>\n                    {user.first_name} {user.last_name} - {user.ref_id}\n                </Breadcrumb.Item>\n            </Breadcrumb>\n\n            <PagingTable\n                data={data.reverse()}\n                toolbarText=\"Surveylist\"\n                serverPaging\n                onRowClick={(d) => {window.location = '/users/' + user.id + '/' + d.id}}\n                config={[\n                    {name: '#', field: (f,i) => data.length - i},\n                    {name: 'Created', sortField: 'created', field: f => Utils.formatDateT(f.created)},\n                    {name: 'Solved', sortField: 'solved', field: f => f ? Utils.formatDateT(f.solved) : ''},\n                    {name: 'Status', sortField: 'status', field: f => <Badge variant=\"light\">{status[f.status]}</Badge>},\n                    {name: 'Last Question', sortField: 'current_question', field: f => f.current_question.text },\n                ]}\n            />\n\n        </div>\n    }\n\n}","import React from \"react\";\nimport PagingTable from \"../../components/PagingTable\";\nimport Utils from \"../../Utils\";\nimport Badge from \"react-bootstrap/Badge\";\nimport API from \"../../API\";\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\n\nexport default class SurveyAnswerList extends React.Component {\n\n    state = {\n        data: [],\n        user: {}\n    };\n\n    componentDidMount() {\n        API.fetch(API.USER_SURVEY_ANSWER_LIST, {survey_id: this.props.match.params.survey_id})\n            .then(r => this.setState({\n                data: r.data,\n                user: r.user\n            }))\n    }\n\n    getChoiceField = (c, i) =>\n        <div key={'c'+i}>\n            <div>{c.text}</div>\n            <div>\n                {c.tags.map(t => <Badge  key={'ct'+i + t.id} variant=\"light\">{t.text}</Badge>)}\n            </div>\n        </div>;\n\n    render() {\n        let {data, user} = this.state;\n\n        return <div className=\"m-3\">\n\n            <Breadcrumb>\n                <Breadcrumb.Item href=\"/users\">Users</Breadcrumb.Item>\n                <Breadcrumb.Item href={\"/users/\" + user.id}>\n                    {user.first_name} {user.last_name} - {user.ref_id}\n                </Breadcrumb.Item>\n                <Breadcrumb.Item active>\n                    {this.props.match.params.survey_id}\n                </Breadcrumb.Item>\n            </Breadcrumb>\n\n            <PagingTable\n                data={data.reverse()}\n                toolbarText=\"Surveylist\"\n                serverPaging\n                onRowClick={(d) => {}}\n                config={[\n                    {name: '#', field: (f,i) => i+1},\n                    {name: 'Created', sortField: 'created', field: f => Utils.formatDateT(f.created), style: {width: '350px'} },\n                    {name: 'Question', sortField: 'tags', field: f =>\n                        <div>\n                            <div>{f.question.text}</div>\n                            <div>\n                                {f.question.tags.map(t => <Badge key={'q'+f.question.id + t.id} variant=\"light\">{t.text}</Badge>)}\n                            </div>\n                        </div>\n                    },\n                    {name: 'Answers', sortField: 'tags', field: f => f.choice.map(this.getChoiceField) },\n                ]}\n            />\n\n        </div>\n    }\n\n}","import React from 'react';\nimport {connect} from 'react-redux'\n\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport Questions from \"./pages/questions/Questions\";\nimport UserList from \"./pages/users/index\";\nimport Metrics from \"./pages/metrics/index\";\nimport MetricsDate from \"./pages/metrics/MetricsDate\";\nimport MetricsChart from \"./pages/metrics/MetricsChart\";\nimport FeedbackList from \"./pages/feedback/index\";\nimport Reports from \"./pages/reports/index\";\nimport Login from \"./pages/login\";\nimport './App.css';\nimport {userRequest} from \"./actions\";\nimport SurveyList from \"./pages/users/SurveyList\";\nimport SurveyAnswerList from \"./pages/users/SurveyAnswerList\";\n\nclass App extends React.Component {\n\n    componentWillMount() {\n        if (window.location.pathname !== '/login') {\n            this.props.loadUser()\n        }\n    }\n\n    render () {\n        return <Router>\n            <Layout>\n                <Route exact path=\"/\" render={()=> <Login/>} />\n                <Route exact path=\"/login\" render={()=> <Login/>} />\n                <Route exact path=\"/tags/\" component={Questions} />\n                <Route exact path=\"/metrics/\" component={Metrics} />\n                <Route exact path=\"/metrics/:date\" component={MetricsDate} />\n                <Route exact path=\"/users/\" component={UserList} />\n                <Route exact path=\"/users/:user_id\" component={SurveyList} />\n                <Route exact path=\"/users/:user_id/:survey_id\" component={SurveyAnswerList} />\n                <Route exact path=\"/reports/\" component={Reports} />\n                <Route exact path=\"/feedback/\" component={FeedbackList} />\n            </Layout>\n        </Router>\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n    loadUser: () => dispatch(userRequest())\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App)","import {USER_REQUEST, USER_RESULTS} from '../actions/types'\n\nconst initialSource = {\n    dataLoading: false\n};\n\nexport const user = (state = initialSource, action) => {\n    const {type, user} = action;\n\n    switch (type) {\n        case USER_REQUEST:\n            return {...state, dataLoading: true };\n        case USER_RESULTS:\n            return {...state, ...user };\n        default:\n            return state\n    }\n};","import {METRICS, METRICS_LOADING} from '../actions/types'\n\nconst initialSource = {\n    metrics: [],\n    metricsLoading: false\n};\n\nexport const metrics = (state = initialSource, action) => {\n    const {type, metrics} = action;\n\n    switch (type) {\n        case METRICS_LOADING:\n            return {...state, metricsLoading: true };\n        case METRICS:\n            return {...state, metrics: metrics, metricsLoading: false };\n        default:\n            return state\n    }\n};","import {USER_LIST_RESULTS, USER_REQUEST, USER_LIST_LOADING} from '../actions/types'\n\nconst initialSource = {\n    count: 0,\n    next: null,\n    previous: null,\n    results: [],\n    dataLoading: false\n};\n\nexport const userList = (state = initialSource, action) => {\n    const {type, userList} = action;\n\n    switch (type) {\n        case USER_LIST_LOADING:\n            return {...state, dataLoading: true };\n        case USER_LIST_RESULTS:\n            return {\n                ...state, \n                ...userList,\n                userListCount: action.userList.count,\n                userListNext: action.userList.next,\n                userListPrevious: action.userList.previous,\n                userListOffset: action.userList.offset,\n                userList: action.userList.results || [],\n                userListLoading: false,\n                dataLoading: false\n            };\n        default:\n            return state\n    }\n};","import {USER_FEEDBACK, USER_FEEDBACK_AGGREGATED} from '../actions/types'\n\nconst initialSource = {\n    dataLoading: false,\n    feedbackAggregatedList: []\n};\n\nexport const feedbackList = (state = initialSource, action) => {\n    const {type, feedbackList, feedbackAggregatedList} = action;\n\n    switch (type) {\n        case USER_FEEDBACK:\n            return {...state, ...feedbackList };\n        case USER_FEEDBACK_AGGREGATED:\n            return {...state, feedbackAggregatedList };\n        default:\n            return state\n    }\n};","import {QUESTION_SELECT_EDIT, QUESTIONS_LIST_REQUEST, QUESTIONS_LIST_RESULT} from '../actions/types'\n\nconst initialSource = {\n    questionsLoading: false,\n    questionList: [],\n    questionCount: 0,\n    questionOffset: 0,\n    questionNext: null,\n    questionPrevious: null,\n    questionActiveItem: null\n};\n\nexport const questions = (state = initialSource, action) => {\n    const {type} = action;\n\n    switch (type) {\n        case QUESTION_SELECT_EDIT:\n            return {...state, questionActiveItem: action.questionActiveItem};\n        case QUESTIONS_LIST_REQUEST:\n            return {...state, questionsLoading: true };\n        case QUESTIONS_LIST_RESULT:\n            return {\n                ...state,\n                questionCount: action.questionList.count,\n                questionNext: action.questionList.next,\n                questionPrevious: action.questionList.previous,\n                questionOffset: action.questionList.offset,\n                questionList: action.questionList.results || [],\n                questionsLoading: false\n            };\n        default:\n            return state\n    }\n};","import { combineReducers } from 'redux'\nimport { user } from './user'\nimport { metrics } from './metrics'\nimport { userList } from \"./userlist\";\nimport { feedbackList } from \"./feedback\";\nimport { questions } from \"./questions\";\n\n\nconst AppReducers = combineReducers({\n    user,\n    metrics,\n    userList,\n    feedbackList,\n    questions\n});\n\nexport default AppReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport './bootstrap.min.css';\nimport './index.css';\nimport Provider from \"react-redux/es/components/Provider\";\nimport configureStore from \"./reducers/configureStore\";\n\nReactDOM.render((\n    <Provider store={configureStore()}>\n        <App/>\n    </Provider>\n), document.getElementById('root'));\n\n"],"sourceRoot":""}